{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Marco/Downloads/VerificaServer-main/VerificaServer-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./connection.service\";\nexport class WebserviceService {\n  constructor(connectionService) {\n    this.connectionService = connectionService;\n    this.headers = new HttpHeaders();\n    this.esamiOk = false;\n  }\n  getPeople(endPoint) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield new Promise((resolve, reject) => {\n        _this.headers = new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8'\n        });\n        _this.connectionService.sendGetRequest(endPoint).subscribe(data => {\n          console.log(\"In service: data from DB studenti OK\");\n          resolve(_this.peopleData = data.data);\n        }, error => {\n          console.log(\"Errore get People\");\n          console.log(error);\n          reject();\n        });\n      });\n    })();\n  }\n  getExams(endPoint, idPerson) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield new Promise((resolve, reject) => {\n        _this2.headers = new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8'\n        });\n        _this2.connectionService.sendPostRequest(endPoint, {\n          id: idPerson\n        }, {\n          headers: _this2.headers\n        }).subscribe(data => {\n          console.log(\"In service: esami singolo utente OK\");\n          if (data.data.length > 0) _this2.esamiOk = true;else _this2.esamiOk = false;\n          resolve(_this2.datiEsami = data.data);\n        }, error => {\n          console.log(\"Errore get Esami\");\n          console.log(error);\n          reject();\n        });\n      });\n    })();\n  }\n  login(endPoint, u, p) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield new Promise((resolve, reject) => {\n        _this3.headers = new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8'\n        });\n        _this3.connectionService.sendPostRequest(endPoint, {\n          username: u,\n          password: p\n        }, {\n          headers: _this3.headers\n        }).subscribe(data => {\n          console.log(data.token);\n          localStorage.setItem(\"token\", data.token);\n          resolve(_this3.loginResponse = data.msg);\n        }, error => {\n          console.log(\"Errore di Login...\");\n          console.log(error);\n          reject();\n        });\n      });\n    })();\n  }\n  static #_ = this.ɵfac = function WebserviceService_Factory(t) {\n    return new (t || WebserviceService)(i0.ɵɵinject(i1.ConnectionService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebserviceService,\n    factory: WebserviceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","WebserviceService","constructor","connectionService","headers","esamiOk","getPeople","endPoint","_this","_asyncToGenerator","Promise","resolve","reject","sendGetRequest","subscribe","data","console","log","peopleData","error","getExams","idPerson","_this2","sendPostRequest","id","length","datiEsami","login","u","p","_this3","username","password","token","localStorage","setItem","loginResponse","msg","_","i0","ɵɵinject","i1","ConnectionService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Marco\\Downloads\\VerificaServer-main\\VerificaServer-main\\src\\app\\service\\webservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpHeaders} from \"@angular/common/http\";\nimport {ConnectionService} from \"./connection.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebserviceService {\n  headers = new HttpHeaders();\n  peopleData:any;\n  datiEsami:any;\n  esamiOk:boolean = false;\n  loginResponse: any;\n\n  constructor(private connectionService: ConnectionService) { }\n\n  async getPeople(endPoint:string): Promise<any>{\n    await new Promise((resolve,reject)=>{\n      this.headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n      this.connectionService.sendGetRequest(endPoint).subscribe(\n        (data:any)=>{\n          console.log(\"In service: data from DB studenti OK\");\n          resolve(this.peopleData=data.data);\n        },\n        (error:any)=>{\n          console.log(\"Errore get People\");\n          console.log(error);\n          reject();\n        }\n      );\n    });\n  }\n\n  async getExams(endPoint: string, idPerson: any): Promise<any>{\n    await new Promise((resolve,reject)=>{\n      this.headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n      this.connectionService.sendPostRequest(endPoint,{id:idPerson},{headers: this.headers}).subscribe(\n        (data:any)=>{\n          console.log(\"In service: esami singolo utente OK\");\n          if(data.data.length > 0)\n            this.esamiOk = true;\n          else\n            this.esamiOk = false;\n          resolve(this.datiEsami=data.data);\n        },\n        (error:any)=>{\n          console.log(\"Errore get Esami\");\n          console.log(error);\n          reject();\n        }\n      );\n    });\n  }\n\n  async login(endPoint:string,u:string,p:string): Promise<any> {\n    await new Promise((resolve, reject) => {\n      this.headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n      this.connectionService.sendPostRequest(endPoint, {username: u, password: p}, {headers: this.headers}).subscribe(\n        (data: any) => {\n          console.log(data.token);\n          localStorage.setItem(\"token\",data.token);\n          resolve(this.loginResponse=data.msg);\n        },\n        (error: any) => {\n          console.log(\"Errore di Login...\");\n          console.log(error);\n          reject();\n        });\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}