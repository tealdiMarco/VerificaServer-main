{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConnectionService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.URL_SERVICE = \"https://localhost:6969/api/\";\n  }\n  sendGetRequest(endPoint) {\n    console.log(this.URL_SERVICE + endPoint);\n    return this.httpClient.get(this.URL_SERVICE + endPoint);\n  }\n  sendPostRequest(endPoint, par, headers) {\n    console.log(\"URL: \" + this.URL_SERVICE + endPoint);\n    return this.httpClient.post(this.URL_SERVICE + endPoint, par, headers);\n  }\n  static #_ = this.ɵfac = function ConnectionService_Factory(t) {\n    return new (t || ConnectionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectionService,\n    factory: ConnectionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ConnectionService","constructor","httpClient","URL_SERVICE","sendGetRequest","endPoint","console","log","get","sendPostRequest","par","headers","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Marco\\Downloads\\VerificaServer-main\\VerificaServer-main\\src\\app\\service\\connection.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  private URL_SERVICE = \"https://localhost:6969/api/\";\n\n  public sendGetRequest(endPoint: string){\n    console.log(this.URL_SERVICE+endPoint);\n    return this.httpClient.get(this.URL_SERVICE+endPoint);\n  }\n\n  public sendPostRequest(endPoint: string, par: any, headers:any):Observable<any> {\n    console.log(\"URL: \" + this.URL_SERVICE + endPoint);\n    return this.httpClient.post(this.URL_SERVICE + endPoint, par, headers);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAEtB,KAAAC,WAAW,GAAG,6BAA6B;EAFN;EAItCC,cAAcA,CAACC,QAAgB;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,GAACE,QAAQ,CAAC;IACtC,OAAO,IAAI,CAACH,UAAU,CAACM,GAAG,CAAC,IAAI,CAACL,WAAW,GAACE,QAAQ,CAAC;EACvD;EAEOI,eAAeA,CAACJ,QAAgB,EAAEK,GAAQ,EAAEC,OAAW;IAC5DL,OAAO,CAACC,GAAG,CAAC,OAAO,GAAG,IAAI,CAACJ,WAAW,GAAGE,QAAQ,CAAC;IAClD,OAAO,IAAI,CAACH,UAAU,CAACU,IAAI,CAAC,IAAI,CAACT,WAAW,GAAGE,QAAQ,EAAEK,GAAG,EAAEC,OAAO,CAAC;EACxE;EAAC,QAAAE,CAAA,G;qBAdUb,iBAAiB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBlB,iBAAiB;IAAAmB,OAAA,EAAjBnB,iBAAiB,CAAAoB,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}